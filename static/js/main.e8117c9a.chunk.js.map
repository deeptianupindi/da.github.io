{"version":3,"sources":["Projects.js","About.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["Projects","className","Container","Row","Col","href","title","width","height","src","frameBorder","allow","allowFullScreen","frameborder","allowfullscreen","React","Component","Profile","Accordion","id","Card","Toggle","as","Header","eventKey","Badge","variant","Collapse","Body","Carousel","interval","Item","Caption","indicators","App","props","state","heading","subheading","Jumbotron","this","Navbar","bg","Nav","defaultActiveKey","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8117c9a.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/container';\nimport Row from 'react-bootstrap/row';\nimport Col from 'react-bootstrap/col';\nimport './App.css';\n\nclass Projects extends React.Component {\n\n  render() {\n    return (\n      <div className=\"desc\">\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"demo-item\">\n                <h3>Savor</h3>\n                <p>Chrome extension to save recipes from websites into a pre-formatted downloadable file.</p>\n                <p><a href=\"https://github.com/deepictorial/savor\">https://github.com/deepictorial/savor</a></p>\n                <iframe title=\"savor\" width=\"275px\" height=\"170px\" src=\"https://www.youtube.com/embed/x1rrirFsmgc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"demo-item\">\n                <h3>Count Me In!</h3>\n                <p>Desktop & Mobile-web app to create personalized event countdowns.</p>\n                <p><a href=\"https://github.com/deepictorial/count-me-in\">https://github.com/deepictorial/count-me-in</a></p>\n                <iframe title=\"count\" width=\"275px\" height=\"170px\" src=\"https://www.youtube.com/embed/B4VIgK9ylAk\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"demo-item\">\n                <h3>Nav-tracker</h3>\n                <p>Dynamically displays personalized list of stock prices with ability to send data to a backend.</p>\n                <p><a href=\"https://github.com/deepictorial/navtracker\">https://github.com/deepictorial/navtracker</a></p>\n                <iframe title=\"nav\" width=\"275px\" height=\"170px\" src=\"https://www.youtube.com/embed/fYTnr69g0yo\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport './App.css';\n\nclass About extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h4>A self-driven, team player with 12 years of software development and testing experience in various domains. Most recently developed ReactJS web and mobile applications for a personalized e-commerce product line. \n      I am eager to work on exciting new projects and technologies. \n      An effective communicator, I love paying attention to the little details.</h4>\n      </div>\n    );\n  }\n}\n\n\nexport default About;\n","import React from 'react';\nimport Accordion from 'react-bootstrap/accordion';\nimport Card from 'react-bootstrap/card';\nimport Col from 'react-bootstrap/col';\nimport Row from 'react-bootstrap/row';\nimport Tab from 'react-bootstrap/tab';\nimport Badge from 'react-bootstrap/badge';\nimport ListGroup from 'react-bootstrap/listgroup';\nimport Carousel from 'react-bootstrap/carousel';\nimport './App.css';\n\nclass Profile extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h3>Work experience as a Software Engineer</h3>\n        <br></br>\n        <Accordion id=\"profile-accordion\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              <Row>\n                <Col id=\"sfly\">\n                  <br />\n                  <i className=\"location\">Tempe, Arizona</i>\n                </Col>\n                <Col>\n                  <h4>Senior Software Engineer</h4>\n                  <i>September 2014 - January 2020</i>\n                </Col>\n                <Col>\n                  <Badge variant=\"primary\">ReactJS</Badge>\n                  <Badge variant=\"dark\">AngularJS</Badge>\n                  <Badge variant=\"success\">NodeJS</Badge>\n                  <Badge variant=\"danger\">Swift</Badge>\n                  <Badge variant=\"warning\">Xcode</Badge>\n                  <Badge variant=\"info\">CSS</Badge>\n                  <Badge variant=\"secondary\">Java</Badge>\n                  <Badge variant=\"warning\">Scala</Badge>\n                  <Badge variant=\"dark\">SQL</Badge>\n                  <Badge variant=\"success\">Jenkins</Badge>\n                  <Badge variant=\"danger\">Kubernetes</Badge>\n                  <Badge variant=\"warning\">JIRA</Badge>\n                  <Badge variant=\"primary\">Selenium</Badge>\n                  <Badge variant=\"info\">Bootstrap</Badge>\n                  <Badge variant=\"secondary\">Redux</Badge>\n                  <Badge variant=\"warning\">PagerDuty</Badge>\n                  <Badge variant=\"danger\">HockeyApp</Badge>\n                  <Badge variant=\"success\">Jasmine</Badge>\n                  <Badge variant=\"info\">Karma</Badge>\n                  <Badge variant=\"warning\">Redis</Badge>\n                  <Badge variant=\"primary\">Sumologic</Badge>\n                  <Badge variant=\"info\">Grafana</Badge>\n                  <Badge variant=\"secondary\">Splunk</Badge>\n                  <Badge variant=\"primary\">E-commerce</Badge>\n                </Col>\n              </Row>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n              <h3 className=\"project-header\">Projects worked at Shutterfly</h3>\n                <Carousel interval=\"50000\">\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Photosbooks, Calendars & Prints apps</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Worked on Photobooks & Calendars products using AngularJS frontend, NodeJS backend and Java services</li>\n                        <li>Developed and tested Prints webapp using Bootstrap components and Javascript</li>\n                        <li>Worked closely with external stakeholders/developers and internal product team to develop the Make-my-book webapp that lets users upload photos for third-party designers to create their photobooks</li>\n                        <li>Unit tested using Jasmine tests</li>\n                        <li>Manual, automation and performance tests for end-end product with post-order print testing</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Universal Text Editor</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Worked on a ReactJS reusable & installable text-editor widget that allows users to customize text font, size, alignment and placement</li>\n                        <li>Developed as a standalone app that was consumed by different teams/projects across Shutterfly via npm installation</li>\n                        <li>Configurable params like enabling/disabling customizable components as needed for each product in Shutterfly</li>\n                        <li>CI/CD using Jenkins</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>MacOS Photos Extension for Shutterfly</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Developed Shutterfly photobooks & prints extension with Swift 4 on MacOS Mojave</li>\n                        <li>Worked with HockeyApp to upload versions of the extension for distribution & testing</li>\n                        <li>Wrote and tested the extension on Xcode 10</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Cards, Stationary, Photogifts & Home-decor apps</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Worked on Photogifts products that include Cards, Stationary, homedecor, gifts etc with ReactJS frontend and Java backend</li>\n                        <li>Deployed code to pre-prod and production environments using Canary builds</li>\n                        <li>Regularly worked with A/B testing team to push new features out to production for user testing</li>\n                        <li>Experience working within remote teams across timezones</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Product Information & Store pages</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Developed in ReactJS, the product Information and store catalog pages that showcase all shutterfly products to users</li>\n                        <li>Worked with Kubernetes to scale-up, scale-down product information service pods based on performance test results written in Scala</li>\n                        <li>Detailed Github and Wiki documentation and runbooks for these backend services and frontend applications</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Production Support</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Deployed production code for Photobooks and Cards projects on a biweekly basis, taking full charge to work with quality engineers, product managers and post-deployment monitoring</li>\n                        <li>Experience with A/B testing and Canary builds</li>\n                        <li>Assigned primary on-call rotation for all projects mentioned above, therefore familiar with PagerDuty app</li>\n                        <li>Experience with Sumologic, Grafana and Splunk to create or extract logs to debug crashes & service errors</li>\n                        <li>Participation in war-rooms to monitor and diffuse holiday season surges & errors</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                </Carousel>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n              <Row>\n                <Col id=\"usair\">\n                  <br />\n                  <i className=\"location\">Phoenix, Arizona</i>\n                </Col>\n                <Col>\n                  <h4>Automation Engineer in Software Quality</h4>\n                  <i>August 2011 - September 2014</i>\n                </Col>\n                <Col>\n                  <Badge variant=\"primary\">C#</Badge>\n                  <Badge variant=\"dark\">Webservices</Badge>\n                  <Badge variant=\"success\">GroovyScript</Badge>\n                  <Badge variant=\"warning\">Test Automation</Badge>\n                  <Badge variant=\"info\">soapUI</Badge>\n                  <Badge variant=\"danger\">Mainframes</Badge>\n                  <Badge variant=\"primary\">Airline Industry</Badge>\n                  <Badge variant=\"info\">Oracle SQL</Badge>\n                </Col>\n              </Row>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <h3 className=\"project-header\">Projects worked at US Airways(now American Airlines)</h3>\n                <Carousel interval=\"50000\" indicators='false'>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Choice Seats Testing and Automation</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Developing automated tests in C# with Visual Studio, Team Foundations Server and integration with Microsoft Test Manager for pricing, seat selection, purchasing and refunds webservices and web applications</li>\n                        <li>Working with TFS build server to queue automation code builds for regression testing and push feature builds to various environments</li>\n                        <li>Developing automated tests using GroovyScript in Soapui for webservices</li>\n                        <li>Daily interactions/communication across various departments with developers, business analysts, project managers, business partners and internal&external stakeholders</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Airline Reservation Mainframe</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Navigating airline reservation mainframe systems for testing and test data setup</li>\n                        <li>Working with databases and airline reservation mainframes for data storage and validations for end-end webservice transactions</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Production Support</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Supporting automated & manual testing for validating Choice Seats production deployments</li>\n                        <li>Testing webservices that were onboarded to use Datapower Appliance leading upto and post deployment</li>\n                        <li>Running full weekly regressions to cover end-to-end usecases for recently released code</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                </Carousel>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n              <Row>\n                <Col id=\"ics\">\n                  <br />\n                  <i className=\"location\">Rockville, Maryland</i>\n                </Col>\n                <Col>\n                  <h4>Software Engineer</h4>\n                  <i>February 2010 - August 2011</i>\n                </Col>\n                <Col>\n                  <Badge variant=\"primary\">C#</Badge>\n                  <Badge variant=\"dark\">PHP</Badge>\n                  <Badge variant=\"success\">Webservices</Badge>\n                  <Badge variant=\"info\">VBScript</Badge>\n                  <Badge variant=\"danger\">soapUI</Badge>\n                  <Badge variant=\"warning\">Test Automation</Badge>\n                  <Badge variant=\"primary\">Telecom Industry</Badge>\n                </Col>\n              </Row>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"3\">\n              <Card.Body>\n                <h3 className=\"project-header\">Projects worked at Infinite Computer Solutions</h3>\n                <Carousel interval=\"50000\">\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Verizon Business Consumer Procurement System</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Webservices testing with SoapUI and UI testing internal tools for consumer product procurement system at Verizon Business</li>\n                        <li>System testing for the whole product mentioned above to ensure accuracy of end-end flow</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Customer Data Content Comparison App</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Developed a windows application in C# for content comparison used within Verizon Business</li>\n                        <li>Worked on tool for validating uniformity of customer data generated by different internal groups</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                </Carousel>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"4\">\n              <Row>\n                <Col id=\"mphs\">\n                  <br />\n                  <i className=\"location\">Bangalore, India</i>\n                </Col>\n                <Col>\n                  <h4>Software Engineer</h4>\n                  <i>July 2006 - December 2007</i>\n                </Col>\n                <Col>\n                  <Badge variant=\"primary\">VBScript</Badge>\n                  <Badge variant=\"dark\">Java</Badge>\n                  <Badge variant=\"success\">Webservices</Badge>\n                  <Badge variant=\"warning\">Mainframes</Badge>\n                  <Badge variant=\"info\">Html</Badge>\n                  <Badge variant=\"danger\">CSS</Badge>\n                  <Badge variant=\"dark\">MS-SQL</Badge>\n                  <Badge variant=\"light\">Oracle SQL</Badge>\n                  <Badge variant=\"warning\">Test Automation</Badge>\n                  <Badge variant=\"info\">Quick Test Professional</Badge>\n                  <Badge variant=\"success\">HP Quality Center</Badge>\n                  <Badge variant=\"dark\">JIRA</Badge>\n                  <Badge variant=\"primary\">Banking Industry</Badge>\n                </Col>\n              </Row>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"4\">\n              <Card.Body>\n                <h3 className=\"project-header\">Projects worked at MphasiS(now HP)</h3>\n                <Carousel interval=\"50000\">\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Chase Creditcard and Fraud protection webapps</h3>\n                      <ul className=\"project-listgroup\">\n                        <li>Functional testing, manual test cases and automation test scripts using VBScript for banking & credit-card web applications</li>\n                        <li>HP Quality Center, Quick Test Profressional for manual test execution and to develop automated tests</li>\n                        <li>Worked with bank mainframes for data storage and application data verification, worked with Oracle for data retrieval, insertion and manipulation</li>\n                        <li>Mentored new employees</li>\n                        <li>Liason between various teams to accomplish end-end of the SDLC</li>\n                      </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item className=\"sfly-project\">\n                    <Carousel.Caption>\n                      <h3>Employee Training Feedback Portal</h3>\n                        <ul className=\"project-listgroup\">\n                          <li>Developed a web application for Employee Training Feedback which was used to collect, consolidate and display feedback data from internal company training sessions</li>\n                          <li>Valuable experience working through the entire SDLC - collection of requirements, creation of development plan, implementing features with Java, finding defects and creating project documentation</li>\n                        </ul>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                </Carousel>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </div>\n    );\n  }\n}\n\n\nexport default Profile;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/jumbotron';\nimport Nav from 'react-bootstrap/nav';\nimport Navbar from 'react-bootstrap/navbar';\nimport Projects from './Projects.js';\nimport About from './About.js';\nimport Profile from './Profile.js';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {heading: \"Deepti Anupindi\", subheading: \"Frontend Developer | Fullstack Engineer\"};\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Jumbotron>\n            <h1 id=\"heading\">{this.state.heading}</h1>\n            <p id=\"banner\">\n              {this.state.subheading}\n            </p>\n            <Navbar id=\"navbar\" bg=\"dark\" variant=\"dark\">\n              <Nav defaultActiveKey=\"/\">\n                <Nav.Item>\n                  <Link to=\"/profile\">Profile</Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Link to=\"/projects\">Projects</Link>\n                </Nav.Item>\n              </Nav>\n            </Navbar>\n          </Jumbotron>\n          <Switch>\n            <Route exact path=\"/\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/projects\">\n              <Projects />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}